<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"  
	xmlns:mvc="http://www.springframework.org/schema/mvc"  
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"> 
    
    <!-- 对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
    <context:component-scan base-package="com.sxt.dao com.sxt.service com.sxt.controller"/>
	<!-- 支持aop注解 -->
	<aop:aspectj-autoproxy />
	<context:annotation-config/>

    
	 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
            destroy-method="close"> 
        <property name="driverClassName" value="org.sqlite.JDBC" /> 
        <property name="url" >
			<value>jdbc:sqlite:D:\webApp\db\txjh.db</value>
        </property>
        <property name="maxIdle" value="10"/>
        <property name="maxActive" value="100"/>
        <property name="maxWait" value="10000"/>
        <property name="validationQuery" value="select 1"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testWhileIdle" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="1200000"/>
        <property name="minEvictableIdleTimeMillis" value="1800000"/>
        <property name="numTestsPerEvictionRun" value="5"/>
        <property name="defaultAutoCommit" value="true"/>
    </bean>  
	
	<bean id="sessionFactory"  
       class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">  
           <property name="dataSource">  
               <ref bean="dataSource" />  
           </property>
           <property name="hibernateProperties">  
               <props>  
               	<!-- key的名字前面都要加hibernate. -->
                   <prop key="hibernate.dialect">  
                      com.xst.utils.BlobMySQLDialect
                   </prop>  
                   <prop key="hibernate.show_sql">false</prop>
                   <prop key="hibernate.hbm2ddl.auto">update</prop>
               </props>
           </property>
		<property name="packagesToScan">
			<value>com.sxt.model</value>
		</property>
   </bean> 
	
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate" >
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
    
    <!--配置一个JdbcTemplate实例-->  
	<bean id="jdbcTemplate"  class="org.springframework.jdbc.core.JdbcTemplate">   
	     <property name="dataSource" ref="dataSource"/>   
	</bean> 
    
    <!-- 配置事务管理 -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" >
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />
	<aop:config> 
		<aop:pointcut expression="execution(public * com.sxt.service.impl.*.*(..))" id="businessService"/> 
		<aop:advisor advice-ref="txAdvice" pointcut-ref="businessService" /> 
	</aop:config> 
	<tx:advice id="txAdvice" transaction-manager="txManager" > 
		<tx:attributes> 
			<tx:method name="find*"  read-only="true" propagation="NOT_SUPPORTED"  /> 
			<tx:method name="get*" read-only="true"/>
			<tx:method name="query*" read-only="true"/>
			<tx:method name="load*" read-only="true"/>
			<tx:method name="has*" read-only="true"/>
			<!-- get开头的方法不需要在事务中运行 。 
			有些情况是没有必要使用事务的，比如获取数据。开启事务本身对性能是有一定的影响的--> 
			<tx:method name="*"/>    <!-- 其他方法在实务中运行 --> 
		</tx:attributes> 
	</tx:advice> 
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	  <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="cacheSeconds" value="0" />  
        <property name="messageConverters">  
            <list>  
                <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>  
            </list>  
        </property>
    </bean>  
    	<!-- 
	对模型视图名称的解析，即在模型视图名称添加前后缀
	InternalResourceViewResolver默认的就是JstlView所以这里就不用配置viewClass了 
	-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/pages/"></property>
		<property name="suffix" value=".html"></property>
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />    
	</bean>
	<!-- 文件上传配置 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="utf-8"></property>   
        <property name="maxUploadSize" value="10485760000"></property>  
        <property name="maxInMemorySize" value="40960"></property>  
    </bean>
	
	
</beans>
